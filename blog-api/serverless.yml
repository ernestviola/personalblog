# NOTE: update this with your service name
service: blog-api

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: us-west-2
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  createblog:
    handler: routes/createblog.main
    events:
      - http:
          path: blogs
          method: post
          cors: true
          authorizer: aws_iam

  getblog:
    handler: routes/getblog.main
    events:
      - http:
          path: blogs/{id}
          method: get
          cors: true 
        
  listblogs:
    handler: routes/listblogs.main
    events:
      - http: 
          path: blogs
          method: get
          cors: true

  updateblog:
    handler: routes/updateblog.main
    events:
      - http:
          path: blogs/{id}
          method: put
          cors: true
          authorizer: aws_iam

  deleteblog:
    handler: routes/deleteblog.main
    events:
      - http:
          path: blogs/{id}
          method: delete
          cors: true
          authorizer: aws_iam
      

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}